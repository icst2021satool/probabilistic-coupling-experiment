{
"Class" : "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer", 
"Methods" : [{ "Name" : "doOptimize" ,
"Duas" : 176,
"0" :  "(193,205, this)",
"1" :  "(193,215, this)",
"2" :  "(193,219, this)",
"3" :  "(193,230, this)",
"4" :  "(193,231, this)",
"5" :  "(193,235, this)",
"6" :  "(193,236, this)",
"7" :  "(193,243, this)",
"8" :  "(193,252, this)",
"9" :  "(193,(259,272), this)",
"10" :  "(193,(259,261), this)",
"11" :  "(193,(259,264), this)",
"12" :  "(193,(198,199), MINIMIZE)",
"13" :  "(193,(198,205), MINIMIZE)",
"14" :  "(193,(244,245), MINIMIZE)",
"15" :  "(193,(244,251), MINIMIZE)",
"16" :  "(193,205, this.preconditioner)",
"17" :  "(193,252, this.preconditioner)",
"18" :  "(193,231, this.initialStep)",
"19" :  "(193,235, this.solver)",
"20" :  "(193,236, this.solver)",
"21" :  "(193,(259,272), $SwitchMap$org$apache$commons$math3$optim$nonlinear$scalar$gradient$NonLinearConjugateGradientOptimizer$Formula)",
"22" :  "(193,(259,261), $SwitchMap$org$apache$commons$math3$optim$nonlinear$scalar$gradient$NonLinearConjugateGradientOptimizer$Formula)",
"23" :  "(193,(259,264), $SwitchMap$org$apache$commons$math3$optim$nonlinear$scalar$gradient$NonLinearConjugateGradientOptimizer$Formula)",
"24" :  "(193,(259,272), this.updateFormula)",
"25" :  "(193,(259,261), this.updateFormula)",
"26" :  "(193,(259,264), this.updateFormula)",
"27" :  "(193,(223,225), checker)",
"28" :  "(193,(223,230), checker)",
"29" :  "(194,205, point)",
"30" :  "(194,219, point)",
"31" :  "(194,221, point)",
"32" :  "(194,230, point)",
"33" :  "(194,(239,240), point)",
"34" :  "(194,(239,243), point)",
"35" :  "(194,243, point)",
"36" :  "(194,252, point)",
"37" :  "(194,240, point)",
"38" :  "(195,(198,199), goal)",
"39" :  "(195,(198,205), goal)",
"40" :  "(195,(244,245), goal)",
"41" :  "(195,(244,251), goal)",
"42" :  "(196,(209,210), n)",
"43" :  "(196,(209,213), n)",
"44" :  "(196,(254,255), n)",
"45" :  "(196,(254,259), n)",
"46" :  "(196,(277,277), n)",
"47" :  "(196,(277,280), n)",
"48" :  "(196,(283,284), n)",
"49" :  "(196,(283,287), n)",
"50" :  "(196,(245,246), n)",
"51" :  "(196,(245,251), n)",
"52" :  "(196,(199,200), n)",
"53" :  "(196,(199,205), n)",
"54" :  "(197,205, r)",
"55" :  "(197,210, r)",
"56" :  "(197,200, r)",
"57" :  "(199,(199,200), i)",
"58" :  "(199,(199,205), i)",
"59" :  "(199,200, i)",
"60" :  "(199,199, i)",
"61" :  "(199,(199,200), i)",
"62" :  "(199,(199,205), i)",
"63" :  "(199,200, i)",
"64" :  "(199,199, i)",
"65" :  "(205,266, steepestDescent)",
"66" :  "(206,230, searchDirection)",
"67" :  "(206,284, searchDirection)",
"68" :  "(206,240, searchDirection)",
"69" :  "(206,210, searchDirection)",
"70" :  "(208,251, delta)",
"71" :  "(208,210, delta)",
"72" :  "(209,(209,210), i)",
"73" :  "(209,(209,213), i)",
"74" :  "(209,210, i)",
"75" :  "(209,209, i)",
"76" :  "(210,251, delta)",
"77" :  "(210,210, delta)",
"78" :  "(209,(209,210), i)",
"79" :  "(209,(209,213), i)",
"80" :  "(209,210, i)",
"81" :  "(209,209, i)",
"82" :  "(213,220, current)",
"83" :  "(214,217, iter)",
"84" :  "(215,235, maxEval)",
"85" :  "(215,236, maxEval)",
"86" :  "(217,(277,277), iter)",
"87" :  "(217,(277,280), iter)",
"88" :  "(217,217, iter)",
"89" :  "(217,(223,225), iter)",
"90" :  "(217,(223,230), iter)",
"91" :  "(220,(222,223), previous)",
"92" :  "(220,(222,230), previous)",
"93" :  "(220,(223,225), previous)",
"94" :  "(220,(223,230), previous)",
"95" :  "(221,220, current)",
"96" :  "(221,(223,225), current)",
"97" :  "(221,(223,230), current)",
"98" :  "(221,225, current)",
"99" :  "(235,240, step)",
"100" :  "(236,235, maxEval)",
"101" :  "(236,236, maxEval)",
"102" :  "(239,(239,240), i)",
"103" :  "(239,(239,243), i)",
"104" :  "(239,240, i)",
"105" :  "(239,239, i)",
"106" :  "(239,(239,240), i)",
"107" :  "(239,(239,243), i)",
"108" :  "(239,240, i)",
"109" :  "(239,239, i)",
"110" :  "(243,252, r)",
"111" :  "(243,(265,266), r)",
"112" :  "(243,(265,268), r)",
"113" :  "(243,266, r)",
"114" :  "(243,255, r)",
"115" :  "(243,246, r)",
"116" :  "(245,(245,246), i)",
"117" :  "(245,(245,251), i)",
"118" :  "(245,246, i)",
"119" :  "(245,245, i)",
"120" :  "(245,(245,246), i)",
"121" :  "(245,(245,251), i)",
"122" :  "(245,246, i)",
"123" :  "(245,245, i)",
"124" :  "(251,268, deltaOld)",
"125" :  "(251,261, deltaOld)",
"126" :  "(252,274, newSteepestDescent)",
"127" :  "(252,255, newSteepestDescent)",
"128" :  "(253,268, delta)",
"129" :  "(253,251, delta)",
"130" :  "(253,261, delta)",
"131" :  "(253,255, delta)",
"132" :  "(254,(254,255), i)",
"133" :  "(254,(254,259), i)",
"134" :  "(254,255, i)",
"135" :  "(254,254, i)",
"136" :  "(255,268, delta)",
"137" :  "(255,251, delta)",
"138" :  "(255,261, delta)",
"139" :  "(255,255, delta)",
"140" :  "(254,(254,255), i)",
"141" :  "(254,(254,259), i)",
"142" :  "(254,255, i)",
"143" :  "(254,254, i)",
"144" :  "(261,(277,280), beta)",
"145" :  "(261,(277,283), beta)",
"146" :  "(261,284, beta)",
"147" :  "(264,268, deltaMid)",
"148" :  "(264,266, deltaMid)",
"149" :  "(265,(265,266), i)",
"150" :  "(265,(265,268), i)",
"151" :  "(265,266, i)",
"152" :  "(265,265, i)",
"153" :  "(266,268, deltaMid)",
"154" :  "(266,266, deltaMid)",
"155" :  "(265,(265,266), i)",
"156" :  "(265,(265,268), i)",
"157" :  "(265,266, i)",
"158" :  "(265,265, i)",
"159" :  "(268,(277,280), beta)",
"160" :  "(268,(277,283), beta)",
"161" :  "(268,284, beta)",
"162" :  "(274,280, steepestDescent)",
"163" :  "(274,266, steepestDescent)",
"164" :  "(274,284, steepestDescent)",
"165" :  "(280,230, searchDirection)",
"166" :  "(280,284, searchDirection)",
"167" :  "(280,240, searchDirection)",
"168" :  "(283,(283,284), i)",
"169" :  "(283,(283,287), i)",
"170" :  "(283,284, i)",
"171" :  "(283,283, i)",
"172" :  "(283,(283,284), i)",
"173" :  "(283,(283,287), i)",
"174" :  "(283,284, i)",
"175" :  "(283,283, i)"},{ "Name" : "parseOptimizationData" ,
"Duas" : 16,
"0" :  "(303,316, this)",
"1" :  "(303,309, this)",
"2" :  "(307,307, arr$)",
"3" :  "(307,(307,307), len$)",
"4" :  "(307,(307,316), len$)",
"5" :  "(307,(307,307), i$)",
"6" :  "(307,(307,316), i$)",
"7" :  "(307,307, i$)",
"8" :  "(307,307, i$)",
"9" :  "(307,(308,309), data)",
"10" :  "(307,(308,307), data)",
"11" :  "(307,309, data)",
"12" :  "(307,(307,307), i$)",
"13" :  "(307,(307,316), i$)",
"14" :  "(307,307, i$)",
"15" :  "(307,307, i$)"},{ "Name" : "findUpperBound" ,
"Duas" : 18,
"0" :  "(330,334, f)",
"1" :  "(330,333, a)",
"2" :  "(330,339, UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH)",
"3" :  "(330,(335,336), yA)",
"4" :  "(330,(335,332), yA)",
"5" :  "(330,332, yA)",
"6" :  "(332,(332,333), step)",
"7" :  "(332,(332,339), step)",
"8" :  "(332,333, step)",
"9" :  "(332,332, step)",
"10" :  "(333,336, b)",
"11" :  "(334,(335,336), yB)",
"12" :  "(334,(335,332), yB)",
"13" :  "(334,332, yB)",
"14" :  "(332,(332,333), step)",
"15" :  "(332,(332,339), step)",
"16" :  "(332,333, step)",
"17" :  "(332,332, step)"},{ "Name" : "checkParameters" ,
"Duas" : 5,
"0" :  "(402,(402,402), this)",
"1" :  "(402,(402,404), this)",
"2" :  "(402,(402,404), this)",
"3" :  "(402,(402,406), this)",
"4" :  "(402,404, CONSTRAINT)"}]
}