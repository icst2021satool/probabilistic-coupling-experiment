{
"Class" : "org.jsoup.parser.XmlTreeBuilder", 
"Methods" : [{ "Name" : "process" ,
"Duas" : 33,
"0" :  "(21,35, this)",
"1" :  "(21,32, this)",
"2" :  "(21,29, this)",
"3" :  "(21,26, this)",
"4" :  "(21,23, this)",
"5" :  "(21,(21,40), token)",
"6" :  "(21,(21,23), token)",
"7" :  "(21,(21,26), token)",
"8" :  "(21,(21,29), token)",
"9" :  "(21,(21,32), token)",
"10" :  "(21,(21,35), token)",
"11" :  "(21,(21,38), token)",
"12" :  "(21,35, token)",
"13" :  "(21,32, token)",
"14" :  "(21,29, token)",
"15" :  "(21,26, token)",
"16" :  "(21,23, token)",
"17" :  "(21,40, token)",
"18" :  "(21,(21,40), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"19" :  "(21,(21,23), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"20" :  "(21,(21,26), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"21" :  "(21,(21,29), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"22" :  "(21,(21,32), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"23" :  "(21,(21,35), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"24" :  "(21,(21,38), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"25" :  "(21,(21,40), token.type)",
"26" :  "(21,(21,23), token.type)",
"27" :  "(21,(21,26), token.type)",
"28" :  "(21,(21,29), token.type)",
"29" :  "(21,(21,32), token.type)",
"30" :  "(21,(21,35), token.type)",
"31" :  "(21,(21,38), token.type)",
"32" :  "(21,40, token.type)"},{ "Name" : "insert" ,
"Duas" : 11,
"0" :  "(50,59, this)",
"1" :  "(50,55, this)",
"2" :  "(50,(54,55), startTag)",
"3" :  "(50,(54,59), startTag)",
"4" :  "(50,55, this.tokeniser)",
"5" :  "(50,59, this.stack)",
"6" :  "(50,(56,57), tag)",
"7" :  "(50,(56,61), tag)",
"8" :  "(50,57, tag)",
"9" :  "(52,59, el)",
"10" :  "(52,61, el)"},{ "Name" : "popStackToClose" ,
"Duas" : 25,
"0" :  "(87,101, this)",
"1" :  "(87,101, this.stack)",
"2" :  "(87,(93,94), elName)",
"3" :  "(87,(93,97), elName)",
"4" :  "(88,(98,99), firstFound)",
"5" :  "(88,(98,101), firstFound)",
"6" :  "(88,(104,105), firstFound)",
"7" :  "(88,(104,108), firstFound)",
"8" :  "(90,(91,92), it)",
"9" :  "(90,(91,98), it)",
"10" :  "(90,92, it)",
"11" :  "(92,(93,94), next)",
"12" :  "(92,(93,97), next)",
"13" :  "(92,94, next)",
"14" :  "(94,(98,99), firstFound)",
"15" :  "(94,(98,101), firstFound)",
"16" :  "(94,(104,105), firstFound)",
"17" :  "(94,(104,108), firstFound)",
"18" :  "(101,(102,103), it)",
"19" :  "(101,(102,111), it)",
"20" :  "(101,103, it)",
"21" :  "(101,108, it)",
"22" :  "(101,105, it)",
"23" :  "(103,(104,105), next)",
"24" :  "(103,(104,108), next)"}]
}