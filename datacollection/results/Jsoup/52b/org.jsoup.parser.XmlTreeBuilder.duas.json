{
"Class" : "org.jsoup.parser.XmlTreeBuilder", 
"Methods" : [{ "Name" : "process" ,
"Duas" : 33,
"0" :  "(26,40, this)",
"1" :  "(26,37, this)",
"2" :  "(26,34, this)",
"3" :  "(26,31, this)",
"4" :  "(26,28, this)",
"5" :  "(26,(26,45), token)",
"6" :  "(26,(26,28), token)",
"7" :  "(26,(26,31), token)",
"8" :  "(26,(26,34), token)",
"9" :  "(26,(26,37), token)",
"10" :  "(26,(26,40), token)",
"11" :  "(26,(26,43), token)",
"12" :  "(26,40, token)",
"13" :  "(26,37, token)",
"14" :  "(26,34, token)",
"15" :  "(26,31, token)",
"16" :  "(26,28, token)",
"17" :  "(26,45, token)",
"18" :  "(26,(26,45), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"19" :  "(26,(26,28), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"20" :  "(26,(26,31), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"21" :  "(26,(26,34), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"22" :  "(26,(26,37), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"23" :  "(26,(26,40), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"24" :  "(26,(26,43), $SwitchMap$org$jsoup$parser$Token$TokenType)",
"25" :  "(26,(26,45), token.type)",
"26" :  "(26,(26,28), token.type)",
"27" :  "(26,(26,31), token.type)",
"28" :  "(26,(26,34), token.type)",
"29" :  "(26,(26,37), token.type)",
"30" :  "(26,(26,40), token.type)",
"31" :  "(26,(26,43), token.type)",
"32" :  "(26,45, token.type)"},{ "Name" : "insert" ,
"Duas" : 11,
"0" :  "(55,64, this)",
"1" :  "(55,60, this)",
"2" :  "(55,(59,60), startTag)",
"3" :  "(55,(59,64), startTag)",
"4" :  "(55,60, this.tokeniser)",
"5" :  "(55,64, this.stack)",
"6" :  "(55,(61,62), tag)",
"7" :  "(55,(61,66), tag)",
"8" :  "(55,62, tag)",
"9" :  "(57,64, el)",
"10" :  "(57,66, el)"},{ "Name" : "insert" ,
"Duas" : 17,
"0" :  "(70,80, this)",
"1" :  "(70,(72,74), commentToken)",
"2" :  "(70,(72,80), commentToken)",
"3" :  "(70,(72,74), commentToken.bogus)",
"4" :  "(70,(72,80), commentToken.bogus)",
"5" :  "(70,74, comment)",
"6" :  "(70,77, comment)",
"7" :  "(71,80, insert)",
"8" :  "(74,(75,75), data)",
"9" :  "(74,(75,80), data)",
"10" :  "(74,(75,75), data)",
"11" :  "(74,(75,76), data)",
"12" :  "(74,76, data)",
"13" :  "(74,77, data)",
"14" :  "(74,(75,76), data)",
"15" :  "(74,(75,80), data)",
"16" :  "(77,80, insert)"},{ "Name" : "popStackToClose" ,
"Duas" : 41,
"0" :  "(100,113, this)",
"1" :  "(100,114, this)",
"2" :  "(100,115, this)",
"3" :  "(100,104, this)",
"4" :  "(100,113, this.stack)",
"5" :  "(100,114, this.stack)",
"6" :  "(100,115, this.stack)",
"7" :  "(100,104, this.stack)",
"8" :  "(100,(105,106), elName)",
"9" :  "(100,(105,103), elName)",
"10" :  "(101,(110,111), firstFound)",
"11" :  "(101,(110,113), firstFound)",
"12" :  "(101,(116,117), firstFound)",
"13" :  "(101,(116,113), firstFound)",
"14" :  "(103,(103,104), pos)",
"15" :  "(103,(103,110), pos)",
"16" :  "(103,104, pos)",
"17" :  "(103,103, pos)",
"18" :  "(104,(105,106), next)",
"19" :  "(104,(105,103), next)",
"20" :  "(104,106, next)",
"21" :  "(106,(110,111), firstFound)",
"22" :  "(106,(110,113), firstFound)",
"23" :  "(106,(116,117), firstFound)",
"24" :  "(106,(116,113), firstFound)",
"25" :  "(103,(103,104), pos)",
"26" :  "(103,(103,110), pos)",
"27" :  "(103,104, pos)",
"28" :  "(103,103, pos)",
"29" :  "(113,(113,114), pos)",
"30" :  "(113,(113,119), pos)",
"31" :  "(113,114, pos)",
"32" :  "(113,115, pos)",
"33" :  "(113,113, pos)",
"34" :  "(114,(116,117), next)",
"35" :  "(114,(116,113), next)",
"36" :  "(113,(113,114), pos)",
"37" :  "(113,(113,119), pos)",
"38" :  "(113,114, pos)",
"39" :  "(113,115, pos)",
"40" :  "(113,113, pos)"}]
}