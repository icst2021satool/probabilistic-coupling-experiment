{
"Class" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 3,
"0" :  "(44,46, this)",
"1" :  "(44,(46,46), rawType)",
"2" :  "(44,(46,46), rawType)"},{ "Name" : "createContextual" ,
"Duas" : 8,
"0" :  "(53,62, this)",
"1" :  "(53,(55,62), $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape)",
"2" :  "(53,(55,58), $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape)",
"3" :  "(53,58, instance)",
"4" :  "(53,(54,55), format)",
"5" :  "(53,(54,62), format)",
"6" :  "(53,(55,62), format)",
"7" :  "(53,(55,58), format)"},{ "Name" : "serialize" ,
"Duas" : 30,
"0" :  "(69,(69,70), value)",
"1" :  "(69,(69,71), value)",
"2" :  "(69,(71,72), value)",
"3" :  "(69,(71,76), value)",
"4" :  "(69,(76,77), value)",
"5" :  "(69,(76,78), value)",
"6" :  "(69,(78,79), value)",
"7" :  "(69,(78,80), value)",
"8" :  "(69,(80,81), value)",
"9" :  "(69,(80,82), value)",
"10" :  "(69,(82,82), value)",
"11" :  "(69,(82,83), value)",
"12" :  "(69,83, value)",
"13" :  "(69,(82,82), value)",
"14" :  "(69,(82,83), value)",
"15" :  "(69,(82,83), value)",
"16" :  "(69,(82,86), value)",
"17" :  "(69,86, value)",
"18" :  "(69,81, value)",
"19" :  "(69,79, value)",
"20" :  "(69,77, value)",
"21" :  "(69,72, value)",
"22" :  "(69,70, value)",
"23" :  "(69,83, g)",
"24" :  "(69,86, g)",
"25" :  "(69,81, g)",
"26" :  "(69,79, g)",
"27" :  "(69,77, g)",
"28" :  "(69,72, g)",
"29" :  "(69,70, g)"},{ "Name" : "getSchema" ,
"Duas" : 5,
"0" :  "(92,(92,92), this)",
"1" :  "(92,(92,92), this)",
"2" :  "(92,92, this)",
"3" :  "(92,(92,92), this._isInt)",
"4" :  "(92,(92,92), this._isInt)"},{ "Name" : "acceptJsonFormatVisitor" ,
"Duas" : 16,
"0" :  "(98,(98,99), this)",
"1" :  "(98,(98,101), this)",
"2" :  "(98,(101,102), this)",
"3" :  "(98,(101,105), this)",
"4" :  "(98,102, this)",
"5" :  "(98,99, this)",
"6" :  "(98,105, visitor)",
"7" :  "(98,102, visitor)",
"8" :  "(98,99, visitor)",
"9" :  "(98,105, typeHint)",
"10" :  "(98,102, typeHint)",
"11" :  "(98,99, typeHint)",
"12" :  "(98,(98,99), this._isInt)",
"13" :  "(98,(98,101), this._isInt)",
"14" :  "(98,99, BIG_INTEGER)",
"15" :  "(98,102, BIG_DECIMAL)"}]
}